<?xml version="1.0" encoding="utf-8"?>

<mx:Canvas

        xmlns:mx="http://www.adobe.com/2006/mxml"
        height="500" width="686"
        borderStyle="solid"
        backgroundColor="#e6e6e6"


        xmlns:virtual_physics="ru.ipo.kio._11.VirtualPhysics.virtual_physics.*"

        creationComplete="doInit()">
    <!--<mx:Style>
        .testeGradiente {
            fillColors: #444444, #ffffff;
            fillAlphas: 0.1, 1;
        }
    </mx:Style>-->


    <mx:Script><![CDATA[
        import mx.controls.Alert;
        import mx.controls.Label;
        import mx.controls.TextInput;
        import mx.events.MenuEvent;

        import ru.ipo.kio._11.VirtualPhysics.virtual_physics.FileManager;
        import ru.ipo.kio._11.VirtualPhysics.virtual_physics.WorldConstants;
        import ru.ipo.kio._11.VirtualPhysics.virtual_physics.WorldModel;
        import ru.ipo.kio.api.*;

        //Модель мира
        internal var model:WorldModel = new WorldModel();
        //Таймер для непрерыной симуляции
        internal var myTimer:Timer = new Timer(35, 0);
        //Активирован автоматический режим
        internal var automaticMode:Boolean = true;
        //Добавленные шарики не сконвертированы
        internal var spriteConverted:Boolean = false;
        //Начальное значение рекордов
        public var RecordF1:String = "0.0";
        internal var RecordF2:String = "0.0";
        internal var RecordF3:String = "0.0";

        private var loc:Object = KioApi.getLocalization(PhysicsProblem.ID);

        public function doInit():void {

            //получаем доступ к API, для этого передаем в качестве параметра id нашей задачи
//		    FlashConnect.trace("api say:"+api.localization.text1);
            //Задаем границы мира
            WorldConstants.LeftLine = 0;
            WorldConstants.TopLine = 0;
            WorldConstants.RightLine = drawer.width;
            WorldConstants.BottomLine = drawer.height;
            //Задаем радиус объектов
            WorldConstants.ObjectRadius = 10;
            WorldConstants.a = debugLabel1;
            WorldConstants.result1 = ResultLabel1;
            WorldConstants.result2 = ResultLabel2;
            WorldConstants.result3 = ResultLabel3;
            myTimer.addEventListener("timer", timerHandler);
            model.painter = drawer;
            //Обновление координат перемещаемого шара при отпускании кнопки мыши
            stage.addEventListener(MouseEvent.MOUSE_UP, dragPositionOut);
            //Сбрасываем модель
            if (automaticMode) {
                model.reset();
//                AddButton.visible = false;
            } else {
                model.painter.drawGrid();
//                AddButton.visible = true;
                StartStopButton.enabled = false;
//                GotoRecordButton.enabled = false;
            }

            dragPositionHeader.visible = !automaticMode;
            dragPositionHeaderX.visible = !automaticMode;
            dragPositionX.visible = !automaticMode;
            dragPositionHeaderY.visible = !automaticMode;
            dragPositionY.visible = !automaticMode;
            debudLablel1Header.visible = true;
            debugLabel1.text = "0";
            WorldConstants.dragPosX = 0;
            WorldConstants.dragPosY = 0;

            //set localization text
            SpeedUpButton.label = loc.buttons.speed_higher;
            ClearButton.label = loc.buttons.clear;
            StartStopButton.label = loc.buttons.run;
            TestHeader.text = loc.results.check;

            ResultsHeader.text = loc.results.results;
            RecordHeader.text = loc.results.record;
            ResultsWrongHalf.text = loc.results.wrong_half;
            RecordWrongHalf.text = loc.results.wrong_half;
            ResultsCellOneBall.text = loc.results.cell_ball;
            RecordCellOneBall.text = loc.results.cell_ball;
            ResultsCenterDist.text = loc.results.dist_center;
            RecordCenterDist.text = loc.results.dist_center;

            ForcesHeader.text = loc.results.functions;
            _11_Label.text = loc.results.f_r_r;
            _12_Label.text = loc.results.f_r_g;
            _22_Label.text = loc.results.f_g_g;
        }

        //Вывод координат перемещенного шара
        public function dragPositionOut(event:MouseEvent):void {
            dragPositionX.text = String(WorldConstants.dragPosX);
            dragPositionY.text = String(WorldConstants.dragPosY);
        }

        //Обработка события таймера
        public function timerHandler(event:TimerEvent):void {
            model.simulationStep();
            if (WorldConstants.a.text == "zero" && WorldConstants.KoeffOne > 0.01) {
                myTimer.stop();
                WorldConstants.a.text = "simulation complete";
                debudLablel1Header.visible = false;
                KioApi.instance(PhysicsProblem.ID).autoSaveSolution();
                testNewRecord(true);
            }
        }

        public function testNewRecord(congratulate:Boolean):void {
            //TODO WTF
            /*if (Number(ResultLabel1.text) < Number(RecordLabel1.text) ||
             (RecordLabel2.text == ResultLabel1.text &&
             (Number(ResultLabel2.text) > Number(RecordLabel2.text))) ||
             (RecordLabel2.text == ResultLabel1.text &&
             (Number(ResultLabel2.text) > Number(RecordLabel2.text)) &&
             (Number(ResultLabel3.text) < Number(RecordLabel3.text))))*/
            if (Number(ResultLabel1.text) < Number(RecordLabel1.text) ||
                    (RecordLabel1.text == ResultLabel1.text &&
                            (Number(ResultLabel2.text) > Number(RecordLabel2.text))) ||
                    (RecordLabel1.text == ResultLabel1.text &&
                            (ResultLabel2.text == RecordLabel2.text) &&
                            (Number(ResultLabel3.text) < Number(RecordLabel3.text)))) {
                if (congratulate) {
                    Alert.show(loc.alert.new_record_message, loc.alert.new_record_header);
                    KioApi.instance(PhysicsProblem.ID).saveBestSolution();
                }
                RecordLabel2.text = ResultLabel2.text;
                RecordLabel1.text = ResultLabel1.text;
                RecordLabel3.text = ResultLabel3.text;
                RecordF1 = OnetoOneForceTextInput.text;
                RecordF2 = OnetoTwoForceTextInput.text;
                RecordF3 = TwotoTwoForceTextInput.text;
            }
        }

        //Действие при нажатии на кнопку "В начало"
        public function ResetClick():void {
            if (automaticMode) {
                model.reset();
            } else {
                WorldConstants.dragPosX = 0;
                WorldConstants.dragPosY = 0;
                model.painter.removeSprites();
                model.restart();
//                AddButton.visible = true;
                spriteConverted = false;
                StartStopButton.enabled = false;
//                GotoRecordButton.enabled = false;
                dragPositionX.text = "0";
                dragPositionY.text = "0";
            }
            ForceBox.enabled = true;
            myTimer.stop();
            StartStopButton.label = loc.buttons.run;
            debugLabel1.text = "0";
            debudLablel1Header.visible = true;
        }

        //Действие при нажатии на кнопку ускоренного режима
        public function SpeedUpButtonClick():void {
            if (myTimer.delay >= 35) {
                myTimer.delay = 1;
                SpeedUpButton.label = loc.buttons.speed_slower;
            } else if (myTimer.delay <= 10) {
                myTimer.delay = 35;
                SpeedUpButton.label = loc.buttons.speed_higher;
            }
        }

        //Действие при нажатии на кнопку добавления шарика
        public function addClick():void {
            model.painter.dynamicFunc();
            //для активации кнопок "Запустить" и "Перейти" необходимо добавить 2 и более шариков
            if (model.painter.arr.length > 1) {
                StartStopButton.enabled = true;
                //GotoRecordButton.enabled = true;
            }
        }

        //Действие при нажатии на кнопку запуска
        public function StartStopButtonClick():void {
            ForceOneButtonClick();
            ForceTwoButtonClick();
            ForceThreeButtonClick();
            if (OnetoOneForceTextInput.errorString == "" &&
                    OnetoTwoForceTextInput.errorString == "" &&
                    TwotoTwoForceTextInput.errorString == "") {
                ForceBox.enabled = false;
//                AddButton.visible = false;
                if (myTimer.running) {
                    myTimer.stop();
                    StartStopButton.label = loc.buttons.run;
                } else {
                    myTimer.start();
                    StartStopButton.label = loc.buttons.pause;
                    if (!automaticMode && !spriteConverted) {
                        model.convertSprite();
                        spriteConverted = true;
//                        GotoRecordButton.enabled = true;
                    }
                }
            }
        }

        //Задание 1 силы
        public function ForceOneButtonClick():void {
            WorldConstants.ForceOneToOne.setExpressionString(OnetoOneForceTextInput.text);
            if (WorldConstants.ForceOneToOne.isExpressionCorrect()) {
                OnetoOneForceTextInput.errorString = "";
            } else {
                OnetoOneForceTextInput.errorString = loc.alert.mistake;//WorldConstants.ForceOneToOne.getError();
            }
        }

        //Задание 2 силы
        public function ForceTwoButtonClick():void {
            WorldConstants.ForceOneToTwo.setExpressionString(OnetoTwoForceTextInput.text);
            if (WorldConstants.ForceOneToTwo.isExpressionCorrect()) {
                OnetoTwoForceTextInput.errorString = "";
            } else {
                OnetoTwoForceTextInput.errorString = loc.alert.mistake;// WorldConstants.ForceOneToTwo.getError();
            }
        }

        //Задание 3 силы
        public function ForceThreeButtonClick():void {
            WorldConstants.ForceTwoToTwo.setExpressionString(TwotoTwoForceTextInput.text);
            if (WorldConstants.ForceTwoToTwo.isExpressionCorrect()) {
                TwotoTwoForceTextInput.errorString = "";
            } else {
                TwotoTwoForceTextInput.errorString = loc.alert.mistake;//WorldConstants.ForceTwoToTwo.getError();
            }
        }

        //Удаление символа из активного текстового поля
        public function removeFromActiveTextField():void {
            var selectedetextinput:TextInput;
            if (focusManager.getFocus() is TextInput) {
                selectedetextinput = ( focusManager.getFocus() as TextInput );
                WorldConstants.a.text = selectedetextinput.text;
                var textBeforeSelection:String = selectedetextinput.text.substring(0, selectedetextinput.selectionBeginIndex - 1);
                var textAfterSelection:String = selectedetextinput.text.substring(selectedetextinput.selectionBeginIndex, selectedetextinput.text.length);
                selectedetextinput.text = textBeforeSelection + textAfterSelection;
                if (selectedetextinput.selectionBeginIndex > 0)
                    selectedetextinput.setSelection(selectedetextinput.selectionBeginIndex - 1, selectedetextinput.selectionBeginIndex - 1);
            } else
                WorldConstants.a.text = "fail";
        }

        //Добавление символа в активное текстовое поле
        public function InsertIntoActiveTextField(instr:String):void {
            var selectedetextinput:TextInput;
            if (focusManager.getFocus() is TextInput) {
                selectedetextinput = ( focusManager.getFocus() as TextInput );
                WorldConstants.a.text = selectedetextinput.selectionBeginIndex.toString();
                var textBeforeSelection:String = selectedetextinput.text.substring(0, selectedetextinput.selectionBeginIndex);
                var textAfterSelection:String = selectedetextinput.text.substring(selectedetextinput.selectionBeginIndex, selectedetextinput.text.length);
                selectedetextinput.text = textBeforeSelection + instr + textAfterSelection;
                selectedetextinput.setSelection(selectedetextinput.selectionBeginIndex + instr.length, selectedetextinput.selectionBeginIndex + instr.length);
            } else
                WorldConstants.a.text = "fail";
        }

        //Действия элементов меню
        private function menuClickHandler(event:MenuEvent):void {
            switch (event.label) {
                /*(comment out regimes)case "Ручной":
                 automaticMode = false;
                 StartStopButton.label = loc.buttons.run;
                 model.painter.removeSprites();
                 model.removeObj();
                 doInit();
                 break;
                 case "Автоматический":
                 automaticMode = true;
                 spriteConverted = false;
                 StartStopButton.enabled = true;
                 //                    GotoRecordButton.enabled = true;
                 StartStopButton.label = loc.buttons.run;
                 model.painter.removeSprites();
                 model.removeObj();
                 doInit();
                 break;*/
                case "В начало":
                    ResetClick();
                    break;
                case "Сохранить":
                    var fmS:FileManager = new FileManager();
                    fmS.saveToFile(OnetoOneForceTextInput.text,
                            OnetoTwoForceTextInput.text,
                            TwotoTwoForceTextInput.text,
                            ResultLabel1.text,
                            ResultLabel2.text,
                            ResultLabel3.text);
                    break;
                case "Загрузить":
                    var fmO:FileManager = new FileManager();
                    fmO.loadFromFile(OnetoOneForceTextInput,
                            OnetoTwoForceTextInput,
                            TwotoTwoForceTextInput,
                            ResultLabel1,
                            ResultLabel2,
                            ResultLabel3);
                    break;
                default:
                    WorldConstants.a.text = event.label;
            }
        }

        //Переход к рекордам
        public function GoToRecordButtonClick():void {
            ResultLabel2.text = RecordLabel2.text;
            ResultLabel1.text = RecordLabel1.text;
            ResultLabel3.text = RecordLabel3.text;
            OnetoOneForceTextInput.text = RecordF1;
            OnetoTwoForceTextInput.text = RecordF2;
            TwotoTwoForceTextInput.text = RecordF3;
        }

        public function get resultLabel_1():Label {
            return ResultLabel1;
        }

        public function get resultLabel_2():Label {
            return ResultLabel2;
        }

        public function get resultLabel_3():Label {
            return ResultLabel3;
        }

        public function get recordLabel_1():Label {
            return ResultLabel1;
        }

        public function get recordLabel_2():Label {
            return ResultLabel2;
        }

        public function get recordLabel_3():Label {
            return ResultLabel3;
        }

        public function get _11():TextInput {
            return OnetoOneForceTextInput;
        }

        public function get _12():TextInput {
            return OnetoTwoForceTextInput;
        }

        public function get _22():TextInput {
            return TwotoTwoForceTextInput;
        }
        ]]></mx:Script>

    <!--<mx:Panel horizontalAlign="center" title="Моделирование физических законов" backgroundAlpha="0" width="800" height="600" >-->
    <mx:VBox horizontalAlign="center" verticalAlign="middle" borderColor="black" x="0" y="0" width="100%" height="100%">
        <!--<mx:MenuBar id="myMenuBar" width="100%" labelField="@label" click="handleMenuClick(myMenuBar.selectedIndex)" itemClick="menuClickHandler(event)" >
            <mx:XMLList>
                <menuitem label="Файл">
                    <menuitem label="В начало" />
                    <menuitem label="Сохранить" />
                    <menuitem label="Загрузить" />
                </menuitem>
                <menuitem label="Режим">
                    <menuitem label="Ручной" />
                    <menuitem label="Автоматический" />
                </menuitem>
            </mx:XMLList>
        </mx:MenuBar>-->
        <mx:HBox visible="false" height="0">
            <mx:Label id="dragPositionHeader" text="Координаты шарика:"/>
            <mx:Label id="dragPositionHeaderX" text="X"/>
            <mx:Label id="dragPositionX" text=""/>
            <mx:Label id="dragPositionHeaderY" text="Y"/>
            <mx:Label id="dragPositionY" text=""/>
            <mx:Label id="debudLablel1Header" text="Кинетическая энергия шариков:"/>
            <mx:Label id="debugLabel1" text="0"/>
        </mx:HBox>
        <mx:HBox borderColor="black">
            <mx:VBox>
                <!--<virtual_physics:WorldDrawer    id="drawer" y="120" x="0" width="480" height="280"/>-->
                <virtual_physics:WorldDrawer id="drawer" y="120" x="0" width="480" height="258"/>
                <mx:VBox id="ForceBox" borderColor="black" height="208" width="480" horizontalAlign="center"
                         borderStyle="solid" paddingTop="18" paddingBottom="10" paddingLeft="4" paddingRight="4">
                    <mx:Label text="Задание сил взаимодействия:" id="ForcesHeader" fontWeight="bold"
                              paddingBottom="18"/>
                    <mx:HBox>
                        <mx:VBox verticalGap="10">
                            <mx:HBox>
                                <mx:Label text="F(К:К) =" id="_11_Label" width="44"/>
                                <mx:TextInput width="200" id="OnetoOneForceTextInput" text="1/r" fontFamily="MONOSPACE"
                                              fontWeight="bold"/>
                                <!--<mx:TextInput width="130"  id="OnetoOneForceTextInput"  text="1100/r^2-0.01*r^(1/2)"/>-->
                            </mx:HBox>
                            <mx:HBox>
                                <mx:Label text="F(К:З) =" id="_12_Label" width="44"/>
                                <!--<mx:TextInput width="130"  id="OnetoTwoForceTextInput" text="500/r^2"/>-->
                                <mx:TextInput width="200" id="OnetoTwoForceTextInput" text="1/r^2 + 10/r"
                                              fontFamily="MONOSPACE" fontWeight="bold"/>
                            </mx:HBox>
                            <mx:HBox>
                                <mx:Label text="F(З:З) =" id="_22_Label" width="44"/>
                                <!--<mx:TextInput width="130" id="TwotoTwoForceTextInput" text="190/r^2-0.001*r^(1/2)"/>-->
                                <mx:TextInput width="200" id="TwotoTwoForceTextInput" text="1/r" fontFamily="MONOSPACE"
                                              fontWeight="bold"/>
                            </mx:HBox>
                        </mx:VBox>
                        <mx:VBox>
                            <mx:HBox>
                                <mx:Button width="33" focusEnabled="false" label="7"
                                           click="{InsertIntoActiveTextField('7');}"/>
                                <mx:Button width="33" focusEnabled="false" label="8"
                                           click="{InsertIntoActiveTextField('8');}"/>
                                <mx:Button width="33" focusEnabled="false" label="9"
                                           click="{InsertIntoActiveTextField('9');}"/>
                                <mx:Button width="33" focusEnabled="false" label="/"
                                           click="{InsertIntoActiveTextField('/');}"/>
                                <mx:Button width="33" focusEnabled="false" label="r"
                                           click="{InsertIntoActiveTextField('r');}"/>
                            </mx:HBox>
                            <mx:HBox>
                                <mx:Button width="33" focusEnabled="false" label="4"
                                           click="{InsertIntoActiveTextField('4');}"/>
                                <mx:Button width="33" focusEnabled="false" label="5"
                                           click="{InsertIntoActiveTextField('5');}"/>
                                <mx:Button width="33" focusEnabled="false" label="6"
                                           click="{InsertIntoActiveTextField('6');}"/>
                                <mx:Button width="33" focusEnabled="false" label="*"
                                           click="{InsertIntoActiveTextField('*');}"/>
                                <mx:Button width="33" focusEnabled="false" label="^"
                                           click="{InsertIntoActiveTextField('^');}"/>
                            </mx:HBox>
                            <mx:HBox>
                                <mx:Button width="33" focusEnabled="false" label="1"
                                           click="{InsertIntoActiveTextField('1');}"/>
                                <mx:Button width="33" focusEnabled="false" label="2"
                                           click="{InsertIntoActiveTextField('2');}"/>
                                <mx:Button width="33" focusEnabled="false" label="3"
                                           click="{InsertIntoActiveTextField('3');}"/>
                                <mx:Button width="33" focusEnabled="false" label="+"
                                           click="{InsertIntoActiveTextField('+');}"/>
                                <mx:Button width="33" focusEnabled="false" label="("
                                           click="{InsertIntoActiveTextField('(');}"/>
                            </mx:HBox>
                            <mx:HBox>
                                <mx:Button width="74" focusEnabled="false" label="0"
                                           click="{InsertIntoActiveTextField('0');}"/>
                                <mx:Button width="33" focusEnabled="false" label=","
                                           click="{InsertIntoActiveTextField('.');}"/>
                                <mx:Button width="33" focusEnabled="false" label="-"
                                           click="{InsertIntoActiveTextField('-');}"/>
                                <mx:Button width="33" focusEnabled="false" label=")"
                                           click="{InsertIntoActiveTextField(')');}"/>
                            </mx:HBox>
                            <mx:HBox>
                                <mx:Button width="45" focusEnabled="false" label="←"
                                           click="{removeFromActiveTextField();}"/>
                                <mx:Button width="45" focusEnabled="false" label="sin"
                                           click="{InsertIntoActiveTextField('sin( )');}"/>
                                <mx:Button width="45" focusEnabled="false" label="cos"
                                           click="{InsertIntoActiveTextField('cos( )');}"/>
                                <!--TODO insert other functions like log, atan etc.-->
                            </mx:HBox>
                        </mx:VBox>
                    </mx:HBox>
                </mx:VBox>
            </mx:VBox>
            <mx:VBox>
                <mx:VBox verticalGap="8" height="130" borderColor="black" width="175" horizontalAlign="center"
                         borderStyle="solid" paddingTop="2" paddingBottom="2" paddingLeft="10" paddingRight="10">
                    <mx:Label text="Проверка:" id="TestHeader" fontWeight="bold" paddingTop="6" paddingBottom="-4"/>
                    <mx:Button width="100" label="Запустить" id="StartStopButton" click="{
		                                                                             StartStopButtonClick();
																				   }"/>
                    <mx:Button width="100" label="В начало" id="ClearButton" click="{
		                                                                             ResetClick();
																				   }"/>
                    <mx:Button width="100" id="SpeedUpButton" label="Ускорить" click="{
		                                                                             SpeedUpButtonClick();
																				   }"/>
                    <!--<mx:Button  width="100" id="AddButton"  label="Добавить"  click="{
                                                                                          addClick();
                                                                                        }"/>-->
                </mx:VBox>
                <mx:VBox verticalGap="1" height="165" borderColor="black" width="175" horizontalAlign="center"
                         borderStyle="solid" paddingTop="2" paddingBottom="2" paddingLeft="2" paddingRight="2"
                         textAlign="center">
                    <mx:Label text="Результат:" id="ResultsHeader" fontWeight="bold"/>
                    <mx:Text text="Не в той половинке:" id="ResultsWrongHalf"/>
                    <mx:Label id="ResultLabel1" text="12" fontWeight="bold" paddingTop="-4"/>
                    <mx:Text text="Клеток с одним шаром:" id="ResultsCellOneBall"/>
                    <mx:Label id="ResultLabel2" text="0" fontWeight="bold" paddingTop="-4"/>
                    <mx:Text text="Расстояние до центра:" id="ResultsCenterDist"/>
                    <mx:Label id="ResultLabel3" text="0" fontWeight="bold" paddingTop="-4"/>
                </mx:VBox>
                <!--<mx:VBox verticalGap="3"	borderColor="black" width="175" height="193" horizontalAlign="center" borderStyle="solid" paddingTop="2" paddingBottom="2" paddingLeft="2" paddingRight="2">-->
                <mx:VBox verticalGap="1" borderColor="black" width="175" height="165" horizontalAlign="center"
                         borderStyle="solid" paddingTop="2" paddingBottom="2" paddingLeft="2" paddingRight="2"
                         textAlign="center">
                    <mx:Label text="Рекорд:" id="RecordHeader" fontWeight="bold"/>
                    <mx:Text text="Не в той половинке:" id="RecordWrongHalf"/>
                    <mx:Label id="RecordLabel1" text="12" fontWeight="bold" paddingTop="-4"/>
                    <mx:Text text="Клеток с одним шаром:" id="RecordCellOneBall" textAlign="center"/>
                    <mx:Label id="RecordLabel2" text="24" fontWeight="bold" paddingTop="-4"/>
                    <mx:Text text="Расстояние до центра:" id="RecordCenterDist" textAlign="center"/>
                    <mx:Label id="RecordLabel3" text="0" fontWeight="bold" paddingTop="-4"/>
                    <!--
               <mx:Button  width="100" id="GotoRecordButton"  label="Перейти"  click="{
                                                                                         ForceOneButtonClick();
                                                                                         ForceTwoButtonClick();
                                                                                         ForceThreeButtonClick();
                                                                                         model.simulationStep();
                                                                                        }"/>
                                                                                        -->
                </mx:VBox>
            </mx:VBox>
        </mx:HBox>
    </mx:VBox>
    <!--	</mx:Panel> -->
</mx:Canvas>